# @package _global_

# example hyperparameter optimization of some experiment with Optuna:
# python train.py -m hparams_search=mnist_optuna experiment=example

defaults:
  - base
  - override /datamodule: electricity
  - override /model: electricity_rnn

model_type: "global"

# here we define Optuna hyperparameter search
# it optimizes for value returned from function with @hydra.main decorator
# docs: https://hydra.cc/docs/next/plugins/optuna_sweeper
hydra:
  sweeper:
    # name of the study to persist optimization results
    study_name: "electricity-rnn-global"
    # define hyperparameter search space
    params:
      ++model.input_chunk_length: range(12, 96, 2) # between 6 hours and 48 hours, with 1 hour increments
      ++model.hidden_dim: range(3, 15, 1)
      ++model.n_rnn_layers: range(1, 3)
      ++model.dropout: range(0.0, 0.4, 0.1)
